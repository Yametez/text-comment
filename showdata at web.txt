HelloWorld.vue
<template>
  <v-card class="pa-5 mx-auto mt-10" max-width="400">
    <!-- ตรวจสอบว่ามีการล็อกอินแล้วหรือยัง -->
    <div v-if="!userData && !loading">
      <v-card-title class="text-center">Login</v-card-title>

      <!-- Form for login -->
      <v-form @submit.prevent="login">
        <v-text-field v-model="email" label="Email" outlined></v-text-field>
        <v-text-field v-model="password" label="Password" type="password" outlined></v-text-field>
        <v-btn type="submit" color="primary" class="mx-auto mt-4" block
          style="display: flex; align-items: center; justify-content: center">
          Login
        </v-btn>
      </v-form>

      <!-- Google login button -->
      <v-btn @click="signInWithGoogle" color="white" dark class="mx-auto mt-4"
        style="display: flex; align-items: center; width: 100%">
        <v-img>
          <img src="@/assets/search.png" alt="Search Icon" width="24" />
        </v-img>
      </v-btn>
    </div>

    <div v-if="userData && !loading" class="text-center">
      <v-card-title>ข้อมูลส่วนตัว</v-card-title>
      <v-avatar size="100">
        <img :src="userData.photoURL" alt="Profile Photo" />
      </v-avatar>
      <p class="mt-2">Name: {{ userData.displayName }}</p>
      <p>Email: {{ userData.email }}</p>
      <p>Age: {{ userData.age }}</p>
      <p>Phone: {{ userData.phone }}</p>
      <v-btn @click="editUserInfo" color="primary" dark class="ma-2">
        แก้ไขข้อมูล
      </v-btn>
      <v-btn @click="logout" color="error" dark class="ma-2">
        Logout
      </v-btn>
    </div>


    <!-- Form for updating user information -->
    <div v-if="editMode" class="text-center">
      <v-card-title>Edit User Information</v-card-title>
      <v-form @submit.prevent="updateUserInfo">
        <v-text-field v-model="userData.displayName" label="Name" outlined></v-text-field>
        <v-text-field v-model="userData.age" label="Age" outlined></v-text-field>
        <v-text-field v-model="userData.phone" label="Phone" outlined></v-text-field>
        <v-btn type="submit" color="primary" class="mx-auto mt-4" block
          style="display: flex; align-items: center; justify-content: center">
          Update
        </v-btn>
      </v-form>
    </div>

    <!-- Snackbar for login/logout messages -->
    <v-snackbar v-model="snackbar" :timeout="3000" color="success">
      {{ snackbarMessage }}
      <template v-slot:action="{ attrs, on }">
        <v-btn color="white" text v-bind="attrs" v-on="on" @click="snackbar = false">
          Close
        </v-btn>
      </template>
    </v-snackbar>

    <!-- Loading indicator -->
    <v-overlay :value="loading">
      <v-progress-circular indeterminate color="primary"></v-progress-circular>
    </v-overlay>
  </v-card>
</template>

<script>
import { auth, db } from '@/firebase/firebase'
import { GoogleAuthProvider } from 'firebase/auth'

export default {
  data() {
    return {
      email: '',
      password: '',
      userData: null,
      editMode: false,
      snackbar: false,
      snackbarMessage: '',
      loading: false,
    }
  },
  methods: {
    async signInWithGoogle() {
      this.loading = true
      const provider = new GoogleAuthProvider()
      try {
        const result = await auth.signInWithPopup(provider)
        console.log(result.user)

        // Save or update user data
        const userRef = db.ref('users/' + result.user.uid)
        const snapshot = await userRef.once('value')
        if (!snapshot.exists()) {
          await userRef.set({
            displayName: result.user.displayName,
            email: result.user.email,
            photoURL: result.user.photoURL,
            age: '',
            phone: ''
          })
        }

        await this.getUserData(result.user.uid)
        this.showSnackbar('Login successful.')
      } catch (error) {
        console.error(error)
        this.showSnackbar('Error during Google login.')
      } finally {
        this.loading = false
      }
    },
    async getUserData(uid) {
      try {
        const snapshot = await db.ref('users/' + uid).once('value')
        this.userData = snapshot.val()
      } catch (error) {
        console.error('Error fetching user data:', error)
        this.showSnackbar('Error fetching user data.')
      }
    },
    async login() {
      this.loading = true
      try {
        const userCredential = await auth.signInWithEmailAndPassword(this.email, this.password)
        await this.getUserData(userCredential.user.uid)
        this.showSnackbar('Login successful.')
      } catch (error) {
        console.error('Error signing in:', error)
        this.showSnackbar('Error during login.')
      } finally {
        this.loading = false
      }
    },
    async logout() {
      this.loading = true
      try {
        await auth.signOut()
        this.userData = null
        this.showSnackbar('Logout successful.')
      } catch (error) {
        console.error('Error signing out:', error)
        this.showSnackbar('Error during logout.')
      } finally {
        this.loading = false
      }
    },
    editUserInfo() {
      this.editMode = true
    },
    async updateUserInfo() {
      this.loading = true
      try {
        await db.ref('users/' + auth.currentUser.uid).update({
          displayName: this.userData.displayName,
          age: this.userData.age,
          phone: this.userData.phone
        })
        this.editMode = false
        this.showSnackbar('User information updated successfully.')
      } catch (error) {
        console.error('Error updating user information:', error)
        this.showSnackbar('Error updating user information.')
      } finally {
        this.loading = false
      }
    },
    showSnackbar(message) {
      this.snackbarMessage = message
      this.snackbar = true
    },
  }
}
</script>

<style scoped>
.v-avatar img {
  border-radius: 50%;
}
</style>
-------------------------------------------------
index.js
import HelloWorld from './HelloWorld.vue';
import pack from './PackageView.vue'

export default {
  HelloWorld,
  pack
}   
--------------------------------------------------------
Package.vue
<template>
    <div>
        HelloWorld
    </div>
</template>
ลองไฟล์งานเฉยๆ ยังไม่ได้ทำอะไร 

-----------------------------------------------------------
firebase.js
import firebase from 'firebase/compat/app';
import 'firebase/compat/auth';
import 'firebase/compat/database';

const firebaseConfig = {
    apiKey: "AIzaSyAgUXcVe08GR10RWz6XLCMkZmtYMfRCdNY",
    authDomain: "loungza.firebaseapp.com",
    databaseURL: "https://loungza-default-rtdb.asia-southeast1.firebasedatabase.app",
    projectId: "loungza",
    storageBucket: "loungza.appspot.com",
    messagingSenderId: "238632288399",
    appId: "1:238632288399:web:3eeac194bd390c1d25f0fa"
};
firebase.initializeApp(firebaseConfig);
  const auth = firebase.auth();
  const db = firebase.database();
  
  export { auth, db };

-------------------------------------------------------------------------
vurtify.js
import Vue from 'vue';
import Vuetify from 'vuetify/lib/framework';

Vue.use(Vuetify);

export default new Vuetify({
});
------------------------------------------------------------------
App.vue
<template>
  <v-app>
    <v-app-bar
      app
      color="primary"
      dark
    >
      <div class="d-flex align-center">
        <v-img
          alt="Vuetify Logo"
          class="shrink mr-4"
          contain
          src="./assets/แมว.jpg"
          transition="scale-transition"
          width="40"
        />

        <span class="mr-4">แสดงข้อมูลในDatabase</span>

      </div>

      <v-spacer></v-spacer>

      <v-btn
        href="https://github.com/vuetifyjs/vuetify/releases/latest"
        target="_blank"
        text
      >
        <span class="mr-2">ทดลองหน้าLogin</span>
        <v-icon>mdi-open-in-new</v-icon>
      </v-btn>
    </v-app-bar>

    <v-main>
      <router-view/>
    </v-main>
  </v-app>
</template>

<script>
export default {
  name: 'App',

  data: () => ({
    //
  }),
};
</script>

-----------------------------------------------------------------
main.js
import Vue from 'vue'
import App from './App.vue'
import vuetify from './plugins/vuetify'
import router from './route'

Vue.config.productionTip = false
Vue.use(router)
new Vue({
  vuetify,
  router,
  render: h => h(App)
}).$mount('#app')
-------------------------------------------------------
หากต้องการต่อยอดโค้ดนี้โดยการ นำข้อมูลจากDatabase ในMysql workbenchมาใช้งาน และแสดงโชว์บนหน้าเว็บเรา จะต้องเพิ่มโค้ดหรือแก้ไขโค้ดตัวไหนบ้าง โดยเงื่อนไขข้อมูลให้โชว์ข้อมูลเป็นตาราง แสดงวิธีทำโดยละเอียด step by step
